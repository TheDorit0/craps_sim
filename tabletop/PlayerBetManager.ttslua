
betZone = {guid = '262b2c'} --betZone.obj set by onLoad
spawnedButtonCount = 0
placeButtonColorSelected = "White"
buttonScale = 1
placeButtonColor = {0,0,0,0}
displayButtonColor = {0,0,0,0.5}
changeButtonColor = {0,0,0,0}
buttonFontColor = "Black"
placeButtonLocy = 0.6
PayoutManager = nil

defaultButtonData = {
  placeButton = {
    --claim
    {pos   = {-2.9,placeButtonLocy,3.4}, height  = 500, width = 600,size = 500, state = 1, name='Place4', placeNumber = "4", buttonNumber = 0, labelColor="Black", fontColor = "Black"},
    {pos   = {-1.26,placeButtonLocy,3.4}, height  = 500, width = 600,size = 500, state = 1, name='Place5', placeNumber = "5", buttonNumber = 0, labelColor="Black", fontColor = "Black"},
    {pos   = {0.38,placeButtonLocy,3.4}, height  = 500, width = 600,size = 500, state = 1, name='Place6', placeNumber = "6", buttonNumber = 0, labelColor="Black", fontColor = "Black"},
    {pos   = {2.02,placeButtonLocy,3.4}, height  = 500, width = 600,size = 500, state = 1, name='Place8', placeNumber = "8", buttonNumber = 0, labelColor="Black", fontColor = "Black"},
    {pos   = {3.66,placeButtonLocy,3.4}, height  = 500, width = 600,size = 500, state = 1, name='Place9', placeNumber = "9", buttonNumber = 0, labelColor="Black", fontColor = "Black"},
    {pos   = {5.3,placeButtonLocy,3.4}, height  = 500, width = 600,size = 500, state = 1, name='Place10', placeNumber = "10", buttonNumber = 0, labelColor="Black", fontColor = "Black"}
},

  placeDisplay = {
    {pos   = {-2.9,placeButtonLocy,1.4}, height  = 400, width = 600,size = 200, state = 1, name='Display4', buttonNumber = 0,placeNumber = "4", labelColor=displayButtonColor, fontColor = "White"},
    {pos   = {-1.26,placeButtonLocy,1.4}, height  = 400, width = 600,size = 200, state = 1, name='Display5', buttonNumber = 0,placeNumber = "5", labelColor=displayButtonColor, fontColor = "White"},
    {pos   = {0.38,placeButtonLocy,1.4}, height  = 400, width = 600,size = 200, state = 1, name='Display6', buttonNumber = 0,placeNumber = "6", labelColor=displayButtonColor, fontColor = "White"},
    {pos   = {2.02,placeButtonLocy,1.4}, height  = 400, width = 600,size = 200, state = 1, name='Display8', buttonNumber = 0,placeNumber = "8", labelColor=displayButtonColor, fontColor = "White"},
    {pos   = {3.66,placeButtonLocy,1.4}, height  = 400, width = 600,size = 200, state = 1, name='Display9', buttonNumber = 0,placeNumber = "9", labelColor=displayButtonColor, fontColor = "White"},
    {pos   = {5.3,placeButtonLocy,1.4}, height  = 400, width = 600,size = 200, state = 1, name='Display10', buttonNumber = 0,placeNumber = "10", labelColor=displayButtonColor, fontColor = "White"}
  },
  removeButton= {
    {pos   = {-2.9,placeButtonLocy,4.5}, height  = 500, width = 600,size = 200, state = 1, name='Remove4', buttonNumber = 0,placeNumber = "4", labelColor=placeButtonColor, fontColor = "White"},
    {pos   = {-1.26,placeButtonLocy,4.5}, height  = 500, width = 600,size = 200, state = 1, name='Remove5', buttonNumber = 0,placeNumber = "5", labelColor=placeButtonColor, fontColor = "White"},
    {pos   = {0.38,placeButtonLocy,4.5}, height  = 500, width = 600,size = 200, state = 1, name='Remove6', buttonNumber = 0,placeNumber = "6", labelColor=placeButtonColor, fontColor = "White"},
    {pos   = {2.02,placeButtonLocy,4.5}, height  = 500, width = 600,size = 200, state = 1, name='Remove8', buttonNumber = 0,placeNumber = "8", labelColor=placeButtonColor, fontColor = "White"},
    {pos   = {3.66,placeButtonLocy,4.5}, height  = 500, width = 600,size = 200, state = 1, name='Remove9', buttonNumber = 0,placeNumber = "9", labelColor=placeButtonColor,fontColor = "White"},
    {pos   = {5.3,placeButtonLocy,4.5}, height  = 500, width = 600,size = 200, state = 1, name='Remove10', buttonNumber = 0,placeNumber = "10", labelColor=placeButtonColor, fontColor = "White"}
  },
  changeButton= {
    {pos   = {5.65,placeButtonLocy,-3.25}, height  = 500, width = 600,size = 200, state = 1, name='ChangeUp', buttonNumber = 0, labelColor=changeButtonColor, fontColor = "White", tooltip = 'Color up'},
    {pos   = {5.65,placeButtonLocy,-1.65}, height  = 500, width = 600,size = 200, state = 1, name='ChangeDown', buttonNumber = 0, labelColor=changeButtonColor, fontColor = "White", tooltip = 'Get change'}
  }
}

function onLoad ()
  ref_buttonData = defaultButtonData
  createPlaceButtons()
  createCurrentAmtButtons()
  createRemoveButtons()
  createChangeButtons()
  betZone['obj'] = getObjectFromGUID(betZone.guid)
  getPayoutManager ()
  subscribeToEvents()
end

function subscribeToEvents ()
  Global.call('subscribeCustomEvent', {eventName = 'pointOff', subscribingObject = self})
  Global.call('subscribeCustomEvent', {eventName = 'hostBetPlaced', subscribingObject = self})
end

function onCollisionEnter(collision_info)
  -- collision_info table:
  --   collision_object    Object
  --   contact_points      Table     {Vector, ...}
  --   relative_velocity   Vector
end

function onCustomEvent (eventParams)
  Wait.time(function () updateBetAmountsDisplay () end, 1)
end

function getBetZone()
  if(betZone.obj) then
    return betZone.obj
  else
    print('Could not get betZone object for '..self.getDescription())
    return nil
  end
end

function getPayoutManager (i)
  if (not i) then
    i = 0
  end
  if (Global.getVar('PayoutManager')) then
    PayoutManager = Global.getVar('PayoutManager')
    registerWithPayoutManager()
  elseif (i < 10) then
    i = i + 1
    Wait(function () getPayoutManager(i) end,2)
  else
    print('Could not register PlayerBetManager '..self.getName()..' with PayoutManager')
  end
end

function registerWithPayoutManager ()
  local p = {color = self.getDescription(), guid = self.guid}
  PayoutManager.call('registerBetManager',p)
end

function getBetAmt ()
  --print('getting bet amount')
  amount = 0
  local ChipsInZone = betZone.obj.getObjects()
  for _,v in pairs(ChipsInZone) do

    if v.tag == "Chip" or v.tag == "Generic" then
        if (v.value ~= nil) then
          -- must be a custom chip using the chip value manager
          amount = amount + v.value
        else
          --TODO add handling for standard TTS poker ChipStack
          print('Unsupported Chip.  Could not compute value.')
        end
    end
  end
  return amount
end

function getBetZoneChips()
  local betZoneChips = {}
  local ChipsInZone = betZone.obj.getObjects()
  for _,v in pairs(ChipsInZone) do
    if v.tag == "Chip" or v.tag == "Generic" then
      table.insert(betZoneChips,v)
    end
  end
  return betZoneChips
end

function destroyBetZoneChips ()
  local ChipsInZone = betZone.obj.getObjects()
  for _,v in pairs(ChipsInZone) do
    if(v.tag == "Chip" ) then
    v.destruct()
  end
  end
end

function isStack(obj)
  if obj.getQuantity() > -1 then
    return true
  else
    return false
  end
end

function click_place(tableIndex,buttonIndex)
  --print('Place')
  local CPparams = {}
  CPparams.player = Player[self.getDescription()]
  CPparams.placeNumber = ref_buttonData.placeButton[tableIndex].placeNumber
  CPparams.removeFlag = false
  CPparams.amt = getBetAmt ()

  if (CPparams.amt == 0) then
    print ('No bet found.')
  else
    --log(CPparams,'click_place--CPparams')
    local currentBet = getPlaceBets (CPparams.placeNumber)
    --log(param, 'click_remove params')
    if (currentBet ~= nil and currentBet > 0) then
      CPparams.amt = CPparams.amt + currentBet
    end

    Global.call('playerPlaceBet',CPparams)
    Wait.time(updateBetAmountsDisplay,1)
    destroyBetZoneChips ()
  end
end

function click_remove(tableIndex,buttonIndex)
  --print('Remove')
  local param = {}
  param.removeFlag = true
  param.amt = 0
  param.player = Player[self.getDescription()]
  param.placeNumber = ref_buttonData.removeButton[tableIndex].placeNumber

  local currentBet = getPlaceBets (param.placeNumber)
  --log(param, 'click_remove params')
  if (currentBet ~= nil and currentBet > 0) then
    Global.call('playerPlaceBet',param)
  payPlayer(currentBet)
  end

  Wait.time(updateBetAmountsDisplay,1)
end

function click_change(tableIndex,buttonIndex)
  --print('Change')
  local param = {}
  param.changeType = ref_buttonData.changeButton[tableIndex].name

  if(PayoutManager and param.changeType == 'ChangeDown' ) then
    for _,v in pairs(getBetZoneChips()) do
      Wait.time(function () PayoutManager.call('makeChange',{color = self.getDescription(), chip = v}) end,0)
    end
  elseif (PayoutManager and param.changeType == 'ChangeUp') then
    payPlayer(getBetAmt ())
    destroyBetZoneChips()
  end
end

function updateBetAmountsDisplay ()
 for _,v in pairs(ref_buttonData.placeDisplay) do
   -- get the place position of the buttonNumber

   -- get the bet amounts
   local betAmt = getPlaceBets(v.placeNumber)
   -- updated button with the bet amount
   if(betAmt == nil) then
     betAmt = 0
   end
   self.editButton({index = v.buttonNumber, label=abb(betAmt)})
 end
end

function createPlaceButtons()

    for i, data in ipairs(ref_buttonData.placeButton) do
        --Sets up reference function
        local buttonNumber = spawnedButtonCount
        local funcName = "place"..i
        local func = function() click_place(i, buttonNumber) end
        self.setVar(funcName, func)
        --Sets up label
        local label = ""
        --Creates button and counts it
        self.createButton({
            label=label, click_function=funcName, function_owner=self,
            position=data.pos, height=data.height, width=data.width,
            font_size=data.size,
            --scale=buttonScale,
            press_color = placeButtonColorSelected,
            color=placeButtonColor, font_color=buttonFontColor
        })
        spawnedButtonCount = spawnedButtonCount + 1
        data.buttonNumber = buttonNumber
      end
end

function createRemoveButtons()

    for i, data in ipairs(ref_buttonData.removeButton) do
        --Sets up reference function
        local buttonNumber = spawnedButtonCount
        local funcName = "remove"..i
        local func = function() click_remove(i, buttonNumber) end
        self.setVar(funcName, func)
        --Sets up label
        local label = ""
        --Creates button and counts it
        self.createButton({
            label=label, click_function=funcName, function_owner=self,
            position=data.pos, height=data.height, width=data.width,
            font_size=data.size,
            --scale=buttonScale,
            press_color = placeButtonColorSelected,
            color=data.labelColor, font_color=data.fontColor
        })
        spawnedButtonCount = spawnedButtonCount + 1
        data.buttonNumber = buttonNumber
      end
end

function createChangeButtons()

    for i, data in ipairs(ref_buttonData.changeButton) do
        --Sets up reference function
        local buttonNumber = spawnedButtonCount
        local funcName = "change"..i
        local func = function() click_change(i, buttonNumber) end
        self.setVar(funcName, func)
        --Sets up label
        local label = ""
        --Creates button and counts it
        self.createButton({
            label=label, click_function=funcName, function_owner=self,
            position=data.pos, height=data.height, width=data.width,
            font_size=data.size,
            --scale=buttonScale,
            press_color = placeButtonColorSelected,
            color=data.labelColor, font_color=data.fontColor,
            tooltip = data.tooltip
        })
        spawnedButtonCount = spawnedButtonCount + 1
        data.buttonNumber = buttonNumber
      end
end


function none()
end

function createCurrentAmtButtons()

    for i, data in ipairs(ref_buttonData.placeDisplay) do
        --Sets up reference function
        local buttonNumber = spawnedButtonCount
        local funcName = "placeDisplay"..i
        local func = function() none() end
        self.setVar(funcName, func)
        --Sets up label
        local label = ""
        if data.state==3 then label="" end
        --Creates button and counts it
        self.createButton({
            label=label, click_function=funcName, function_owner=self,
            position=data.pos, height=data.height, width=data.width,
            font_size=data.size,
            --scale=buttonScale,
            press_color = placeButtonColorSelected,
            color=data.labelColor, font_color=data.fontColor
        })
        spawnedButtonCount = spawnedButtonCount + 1
        data.buttonNumber = buttonNumber
      end
end

function getPlaceBets (placeNum)
  local PBparams = {player = Player[self.getDescription()], placeNumber = placeNum }
  -- player
  -- placeNumber
  return Global.call('getPlaceBets',PBparams)
end

function payPlayer(amount)
  PM = Global.getVar('PayoutManager')
  if (PM and amount ~= nil and amount > 0)
   then
     local PPparams = {color = Player[self.getDescription()].color, amt = amount }
     PM.call('pay',PPparams)
   end
end

function abb(num)
  n = tonumber(num)
    if n>=1*10^4 and n<1*10^6 then
        n=(n/1*10^-3)
        return string.sub(tostring(n),1,5).."k"
    elseif n>=1*10^6 and n<1*10^7 then
        n=(n/1*10^-6)
        return string.sub(tostring(n),1,3).."M"
    elseif n>=1*10^7 and n<1*10^8 then
        n=(n/1*10^-7)
        return string.sub(tostring(n),1,3).."B"
    elseif n>=1*10^8 and n<1*10^9 then
        n=(n/1*10^-8)
        return string.sub(tostring(n),1,3).."T"
    else
        return n
    end
end
--> 1.3T
